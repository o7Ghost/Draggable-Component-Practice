{"ast":null,"code":"var _jsxFileName = \"/Users/joseph/Desktop/Draggable-Component-Practice/reactdrag/reactgriddrag/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport DraggableContainer from \"./DraggableContainer\";\nimport Widget from \"./Widget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WIDGETLIST = [{\n  id: \"A\",\n  content: \"A\",\n  size: 1\n}, {\n  id: \"B\",\n  content: \"B\",\n  size: 2\n}, {\n  id: \"C\",\n  content: \"C\",\n  size: 3\n}, {\n  id: \"D\",\n  content: \"D\",\n  size: 4\n}];\nconst dashBroad = {\n  display: \"grid\",\n  gridTemplateColumns: \"auto auto auto\",\n  gridGap: \"1rem\"\n};\nfunction App() {\n  _s();\n  const [widgets, setWidget] = useState(WIDGETLIST);\n  const [draggedOverContainerId, setDraggedOverContainerId] = useState(null);\n  const [onDragContainerId, setOnDragContainerId] = useState(null);\n  const moveItem = (list, from, to) => {\n    const listClone = [...list];\n    if (from < to) {\n      listClone.splice(to + 1, 0, listClone[from]);\n      listClone.splice(from, 1);\n    } else if (to < from) {\n      listClone.splice(to, 0, listClone[from]);\n      listClone.splice(from + 1, 1);\n    }\n    return listClone;\n  };\n  const handleDrop = () => {\n    console.log(\"what is id?\", draggedOverContainerId);\n    if (!draggedOverContainerId || onDragContainerId === draggedOverContainerId) {\n      console.log(\"clear\");\n      clearState();\n      return;\n    }\n    const fromIndex = widgets.findIndex(w => w.id === onDragContainerId);\n    const toIndex = widgets.findIndex(w => w.id === draggedOverContainerId);\n    setWidget(w => moveItem(w, fromIndex, toIndex));\n    clearState();\n  };\n  const handleDragEntered = dragContainerId => {\n    setDraggedOverContainerId(dragContainerId);\n  };\n\n  // const handleDragLeave = () => {\n  //   setDraggedOverContainerId(null);\n  // };\n\n  const clearState = () => {\n    setOnDragContainerId(null);\n    setDraggedOverContainerId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: dashBroad,\n      children: widgets.map(w => /*#__PURE__*/_jsxDEV(DraggableContainer, {\n        size: w.size,\n        onDrop: handleDrop,\n        onDragEnter: () => handleDragEntered(w.id),\n        isDraggedOver: w.id === draggedOverContainerId\n        // onDragLeave={handleDragLeave}\n        ,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          content: w.content,\n          onDragStart: () => {\n            setOnDragContainerId(w.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, w.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XU908/7OtGM625hEjRLwGzZeleU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","DraggableContainer","Widget","jsxDEV","_jsxDEV","WIDGETLIST","id","content","size","dashBroad","display","gridTemplateColumns","gridGap","App","_s","widgets","setWidget","draggedOverContainerId","setDraggedOverContainerId","onDragContainerId","setOnDragContainerId","moveItem","list","from","to","listClone","splice","handleDrop","console","log","clearState","fromIndex","findIndex","w","toIndex","handleDragEntered","dragContainerId","children","style","map","onDrop","onDragEnter","isDraggedOver","onDragStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joseph/Desktop/Draggable-Component-Practice/reactdrag/reactgriddrag/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport DraggableContainer from \"./DraggableContainer\";\nimport Widget from \"./Widget\";\n\nconst WIDGETLIST = [\n  { id: \"A\", content: \"A\", size: 1 },\n  { id: \"B\", content: \"B\", size: 2 },\n  { id: \"C\", content: \"C\", size: 3 },\n  { id: \"D\", content: \"D\", size: 4 },\n];\n\nconst dashBroad = {\n  display: \"grid\",\n  gridTemplateColumns: \"auto auto auto\",\n  gridGap: \"1rem\",\n};\n\nfunction App() {\n  const [widgets, setWidget] = useState(WIDGETLIST);\n  const [draggedOverContainerId, setDraggedOverContainerId] = useState(null);\n  const [onDragContainerId, setOnDragContainerId] = useState(null);\n\n  const moveItem = (list, from, to) => {\n    const listClone = [...list];\n    if (from < to) {\n      listClone.splice(to + 1, 0, listClone[from]);\n      listClone.splice(from, 1);\n    } else if (to < from) {\n      listClone.splice(to, 0, listClone[from]);\n      listClone.splice(from + 1, 1);\n    }\n    return listClone;\n  };\n\n  const handleDrop = () => {\n    console.log(\"what is id?\", draggedOverContainerId);\n    if (\n      !draggedOverContainerId ||\n      onDragContainerId === draggedOverContainerId\n    ) {\n      console.log(\"clear\");\n      clearState();\n      return;\n    }\n\n    const fromIndex = widgets.findIndex((w) => w.id === onDragContainerId);\n    const toIndex = widgets.findIndex((w) => w.id === draggedOverContainerId);\n    setWidget((w) => moveItem(w, fromIndex, toIndex));\n    clearState();\n  };\n\n  const handleDragEntered = (dragContainerId) => {\n    setDraggedOverContainerId(dragContainerId);\n  };\n\n  // const handleDragLeave = () => {\n  //   setDraggedOverContainerId(null);\n  // };\n\n  const clearState = () => {\n    setOnDragContainerId(null);\n    setDraggedOverContainerId(null);\n  };\n\n  return (\n    <div>\n      <div style={dashBroad}>\n        {widgets.map((w) => (\n          <DraggableContainer\n            key={w.id}\n            size={w.size}\n            onDrop={handleDrop}\n            onDragEnter={() => handleDragEntered(w.id)}\n            isDraggedOver={w.id === draggedOverContainerId}\n            // onDragLeave={handleDragLeave}\n          >\n            <Widget\n              content={w.content}\n              onDragStart={() => {\n                setOnDragContainerId(w.id);\n              }}\n            />\n          </DraggableContainer>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}